---
title: "Logistic Regression Classification"
format:
  html:
    embed-resources: true
editor: visual
---

# Load libraries
```{r}
#| message: false
library('tidyverse')
library('tidymodels')
```

# Load data
```{r}
#| message: false
diabetes_data <- read_tsv('../data/04_diabetes_data_augment.tsv',
                          na = 'NA')
```

The model should predict a DM/pre-DM diagnosis based on anthropometric measurements and biomarkers.

# Prepare data for model training
```{r}
model_data <- diabetes_data |> 
  drop_na() |> 
  select(diagnosis,weight,height,leg,arml,armc,waist,tri_skinfold,sub_skinfold,gh,albumin,bun,creatinine) |> 
  mutate(diagnosis = factor(diagnosis))

```

# Prepare training and testing data
```{r}
set.seed(42)

#Split data for training (70%)/testing (30%)
data_split <- model_data |> 
  initial_split(prop = 0.7)

data_train <- training(data_split)
data_test <- testing(data_split)

```

# Set model specification
```{r}
logreg_spec <- logistic_reg() |> 
  set_engine("glm") |> 
  set_mode("classification")
```

# Train model
```{r}
logreg_fit <- logreg_spec |> 
  fit(diagnosis ~ ., data = data_train)
  
logreg_fit
```

# Test model
```{r}
predicted_class <- data_test |> 
  select(diagnosis) |> 
  bind_cols(logreg_fit |> 
              predict(new_data = data_test))
```

# Check accuracy
```{r}
accuracy(data = predicted_class, 
         truth = diagnosis,
         estimate = .pred_class)

```

```{r}
conf_mat(data = predicted_class, 
         truth = diagnosis,
         estimate = .pred_class)
```

```{r}
eval_metrics <- metric_set(ppv, recall, accuracy, f_meas)

eval_metrics(data = predicted_class, 
             truth = diagnosis, 
             estimate = .pred_class)
```

```{r}
class_prob <- predicted_class |> 
  bind_cols(logreg_fit |>  
              predict(new_data = data_test, 
                      type = "prob"))
```



```{r}
# ROC graph
class_prob %>% 
  roc_curve(truth = diagnosis, 
            .pred_1)  |>  
  autoplot()
```





