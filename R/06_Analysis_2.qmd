---
title: "Logistic Regression Model"
format:
  html:
    embed-resources: true
editor: visual
---

# Clear Workspace

```{r}
rm(list = ls())
```

# Load Libraries

```{r}
library("tidyverse")
library("patchwork")
library("dplyr")
```

# Load data

```{r}
#| message: false
diabetes_data <- read_tsv(file = "../data/03_diabetes_data_augment.tsv")
```

# Logistic regression model

Logistic regression modelling is performed to predict the variables that gives increase or decrease in the probability of a given outcome.

The model should predict a DM/pre-DM diagnosis based on anthropometric measurements and biomarkers.

# Prepare data for model training

```{r}

model_data <- diabetes_data |> 
  filter(medication == 0) |> 
  drop_na() |> 
  select(diagnosis ,weight,height,leg,arml,armc,waist,tri_skinfold,sub_skinfold,gh,albumin,bun,creatinine,bmi,ci,bfp) |> 
  mutate(diagnosis = factor(diagnosis))

```

# Prepare training and testing data

```{r}
# Set seed for reproducibility
set.seed(42)

#Split data for training (70%)/testing (30%)
data_split <- model_data |> 
  initial_split(prop = 0.7)

data_train <- training(data_split)
data_test <- testing(data_split)

```

Perform the logistic model for the training data

```{r}
model <- glm(diagnosis ~. ,
             family = "binomial",
             data = data_train)

summary(model)
```

```{r}
# Predict on the test set
predictions <- predict(model, newdata = data_test, type = "response")

```

```{r}
# Confusion matrix - NOT CORRECT TIDYVERSE CODE!!!!!!!!!!
confusion_matrix <- table(data_test$diagnosis, predictions > 0.5)

# Accuracy
accuracy <- sum(diag(confusion_matrix))/sum(confusion_matrix)

# Sensitivity and Specificity
sensitivity <- confusion_matrix[2,2] / (confusion_matrix[2,1] + confusion_matrix[2,2])
specificity <- confusion_matrix[1,1] / (confusion_matrix[1,1] + confusion_matrix[1,2])

coef_table <- coef(summary(model))

coef_table
```

```{r}

# Fit logistic regression model
model1 <- glm(formula = diagnosis~gh + creatinine+
                                  bfp + armc, family = "binomial", data = data_test)

#coef(model)
exp(coef(model))
```

\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_

# Logistic regression

```{r}
model1 <- glm(diagnosis ~ bmi, family = "binomial", data = diabetes_data)
model2 <- glm(diagnosis ~ gh, family = "binomial", data = diabetes_data)

summary(model2)
```

```{r}
 diabetes_data |>
   ggplot(aes(gh, diagnosis)) +
   geom_point(alpha = 0.2) +
   geom_smooth(method = "glm", method.args = list(family = "binomial")) +
   labs(
     title = "Logistic Regression Model", 
     x = "GH Concentration",
     y = "Probability of diabetes"
     )
```
